<%
    local uci = require "luci.model.uci"

    ubus = require("ubus")

    if not (ubus) then
        error("check require ubus")
    else
        local result = {ubus.connect()}
        if result[2] then
            error("make connector")
        else
            ubusConnector = result[1]
        end
    end
%>

<div class="cbi-section">
    <h3><%:Radio module%>:</h3>

    <table width="100%" cellspacing="50">
        <%if true then
            local supported = modemObject.storage.generic["supported-capabilities"] or {};
            local current = modemObject.storage.generic["current-capabilities"] or {};
            local selected = luci.http.formvalue("/radio/capabilities");
            selected = selected and {selected} or current;

            if current[1] ~= selected[1] then
                result = ubusConnector:call("kroks.dev.modem." ..modemName, "capabilities", { [selected[1]] = true });
            end
        %><tr>
            <%if #current > 0 then%>
            <td width="350px"><%:Capabilities%>:</td>
            <td>
                <select name="/radio/capabilities" style="width: 350px;">
                    <%for capabilitiesIndex, capabilitiesName in pairs(supported) do
                    %><option value="<%= capabilitiesName %>" <%= capabilitiesName == selected and "selected" or ""%>><%= capabilitiesName %> </option><%
                    end%>
                </select>
            </td>
            <%end%>
        </tr>
            <%if result and result[".error"] then%>
            <tr>
                <td></td>
                <td style="background-color: red;"><%=result[".error"]%></td>
            </tr>
            <%end%>
        <%end%>

        <%if true then
            local supported = modemObject.storage.generic["supported-modes"] or {};
            local current = modemObject.storage.generic["current-modes"] or "";
            local selected = luci.http.formvalue("/radio/modes") or current;

            if current ~= selected then
                local bandsMap = {};

                for bandsIndex, bandsName in pairs(modemObject.storage.generic["supported-bands"] or {}) do
                    bandsMap[bandsName] = true;
                end

                result = ubusConnector:call("kroks.dev.modem." ..modemName, "bands", bandsMap);
                result = ubusConnector:call("kroks.dev.modem." ..modemName, "modes", { [selected] = true });

                if not result[".error"] then
                    for modesName, modesState in pairs(result) do
                        if modesState then
                            modemObject.storage.generic["current-modes"] = modesName;
                            break;
                        end
                    end
                end
            end
        %><tr>
            <%if #current > 0 then%>
            <td width="350px"><%:Modes%>:</td>
            <td>
                <select id="/radio/modes" name="/radio/modes" style="width: 350px;" onchange="modesChange_Handler()">
                    <%for modesIndex, modesName in pairs(supported) do
                    %><option value="<%= modesName %>" <%= modesName == selected and "selected" or ""%>><%= modesName %> </option><%
                    end%>
                </select>
            </td>
            <%end%>
        </tr>
            <%if result and result[".error"] then%>
            <tr>
                <td></td>
                <td style="background-color: red;"><%=result[".error"]%></td>
            </tr>
            <%end%>
        <%end%>

        <%if true then
            local supported = modemObject.storage.generic["supported-bands"] or {};
            local current = modemObject.storage.generic["current-bands"] or {};
            local formvalue = luci.http.formvalue("/radio/bands");
            if formvalue then
                formvalue = type(formvalue) == "table" and formvalue or {formvalue};
            end
            
            local selected = formvalue or current;

            local selectedMap = {};
            local changed = false;

            for supportedIndex, supportedName in pairs(supported) do
                selectedMap[supportedName] = false;

                for selectedIndex, selectedName in pairs(selected) do
                    if supportedName == selectedName then
                        selectedMap[supportedName] = true;
                    end
                end

                if current[supportedIndex] ~= selected[supportedIndex] then
                    changed = true;
                end
            end

            local supportedTable = {
                cdma1x = {},
                gsm = {},
                umts = {},
                lte = {}
            };

            for bandsIndex, bandsName in pairs(supported) do
                if bandsName:match("^eutran%-(%d+)$") then
                    table.insert(supportedTable.lte, bandsName);
                elseif bandsName:match("^utran%-(%d+)$") then
                    table.insert(supportedTable.umts, bandsName);
                elseif bandsName:match("^cdma-bc%-(%d+)$") then
                    table.insert(supportedTable.cdma1x, bandsName);
                else
                    table.insert(supportedTable.gsm, bandsName);
                end
            end

            local currentModes = modemObject.storage.generic["current-modes"] or "";

            if not currentModes:match("2g") then
                for bandIndex, bandName in pairs(supportedTable.gsm) do
                    selectedMap[bandName] = false;
                end
            end

            if not currentModes:match("3g") then
                for bandIndex, bandName in pairs(supportedTable.umts) do
                    selectedMap[bandName] = false;
                end
            end

            if not currentModes:match("4g") then
                for bandIndex, bandName in pairs(supportedTable.lte) do
                    selectedMap[bandName] = false;
                end
            end

            if changed then
                result = ubusConnector:call("kroks.dev.modem." ..modemName, "bands", selectedMap);
            end
        %><tr>
            <%if #current > 0 then%>
            <td width="350px"><%:Bands%>:</td>
            <td>
                <table>
                    <tr>
                        <%if #supportedTable.cdma1x > 0 then%>
                        <td style="vertical-align: top;">
                            <span>CDMA 1X:</span><hr>

                            <%for bandIndex, bandName in pairs(supportedTable.cdma1x) do%>
                                <input
                                    id="/radio/bands/<%= bandName%>"
                                    
                                    style="vertical-align: middle"
                                    name="/radio/bands"
                                    type="checkbox"
                                    value="<%= bandName%>"
                                    <%= selectedMap[bandName] and "checked" or ""%>>

                                <label for="/radio/bands/<%= bandName%>" style="vertical-align: middle"><%= bandName:upper()%></label><br>
                            <%end%>
                        </td>
                        <%end%>

                        <%if #supportedTable.gsm > 0 then%>
                        <td style="vertical-align: top;">
                            <span>GSM (2G):</span><hr>

                            <%for bandIndex, bandName in pairs(supportedTable.gsm) do%>
                                <input
                                    id="/radio/bands/<%= bandName%>"
                                    class="radio-bands-gsm"
                                    style="vertical-align: middle"
                                    name="/radio/bands"
                                    type="checkbox"
                                    value="<%= bandName%>"
                                    <%= selectedMap[bandName] and "checked" or ""%>
                                    <%= currentModes:match("2g") and "" or "disabled" %>>

                                <label for="/radio/bands/<%= bandName%>" style="vertical-align: middle"><%= bandName:upper()%></label><br>
                            <%end%>
                        </td>
                        <%end%>
                        
                        <%if #supportedTable.umts > 0 then%>
                        <td style="vertical-align: top;">
                            <span>UMTS (3G):</span><hr>

                            <%for bandIndex, bandName in pairs(supportedTable.umts) do%>
                                <input
                                    id="/radio/bands/<%= bandName%>"
                                    class="radio-bands-umts"
                                    style="vertical-align: middle"
                                    name="/radio/bands"
                                    type="checkbox"
                                    value="<%= bandName%>"
                                    <%= selectedMap[bandName] and "checked" or ""%>
                                    <%= currentModes:match("3g") and "" or "disabled" %>>

                                <label for="/radio/bands/<%= bandName%>" style="vertical-align: middle"><%= bandName:upper()%></label><br>
                            <%end%>
                        </td>
                        <%end%>
                        
                        <%if #supportedTable.lte > 0 then%>
                        <td style="vertical-align: top;">
                            <span>LTE (4G):</span><hr>

                            <%for bandIndex, bandName in pairs(supportedTable.lte) do%>
                                <input
                                    id="/radio/bands/<%= bandName%>"
                                    class="radio-bands-lte"
                                    style="vertical-align: middle"
                                    name="/radio/bands"
                                    type="checkbox"
                                    value="<%= bandName%>"
                                    <%= selectedMap[bandName] and "checked" or ""%>
                                    <%= currentModes:match("4g") and "" or "disabled" %>>

                                <label for="/radio/bands/<%= bandName%>" style="vertical-align: middle"><%= bandName:upper()%></label><br>
                            <%end%>
                        </td>
                        <%end%>
                    </tr>
                </table>
            </td>
            <%end%>
        </tr>
            <%if result and result[".error"] then%>
            <tr>
                <td></td>
                <td style="background-color: red;"><%=result[".error"]%></td>
            </tr>
            <%end%>
        <%end%>

        <%if true then
            local supported = { translate("Disabled"), translate("Enabled") };

            local service_location = tonumber(modemObject.config.service_location or "0") or 0;
            local current = service_location + 1;
            local selected = tonumber(luci.http.formvalue("/radio/service_location") or current);

            if current ~= selected then
                uci:set('kroks-dev-modem', modemName, 'service_location', selected - 1)
                uci:commit('kroks-dev-modem')
                os.execute('/etc/init.d/kroks-ubus-dev-modem reload 1>/dev/null')
            end
        %><tr>
            <td width="350px"><%:Location service%>:</td>
            <td>
                <select name="/radio/service_location" style="width: 350px;">
                    <%for optionIndex, optionValue in pairs(supported) do
                    %><option value="<%= optionIndex %>" <%= optionIndex == selected and "selected" or ""%>><%= optionValue %> </option><%
                    end%>
                </select>
            </td>
        </tr>
            <%if result and result[".error"] then%>
            <tr>
                <td></td>
                <td style="background-color: red;"><%=result[".error"]%></td>
            </tr>
            <%end%>
        <%end%>
    </table>
</div>

<script>
    function modesChange_Handler() {
        let modes = document.getElementById("/radio/modes").value;

        if (true) {
            let array = document.getElementsByClassName("radio-bands-gsm");
            let checkedCount = 0;

            for (let i = 0; i < array.length; i++) {
                checkedCount += array[i].checked ? 1 : 0;
            }

            if (modes.indexOf("2g") == -1) {
                if (checkedCount > 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = false;
                        array[i].disabled = true;
                    }
                }
            } else {
                if (checkedCount == 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = true;
                        array[i].disabled = false;
                    }
                }
            }
        }

        if (true) {
            let array = document.getElementsByClassName("radio-bands-umts");
            let checkedCount = 0;

            for (let i = 0; i < array.length; i++) {
                checkedCount += array[i].checked ? 1 : 0;
            }

            if (modes.indexOf("3g") == -1) {
                if (checkedCount > 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = false;
                        array[i].disabled = true;
                    }
                }
            } else {
                if (checkedCount == 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = true;
                        array[i].disabled = false;
                    }
                }
            }
        }


        if (true) {
            let array = document.getElementsByClassName("radio-bands-lte");
            let checkedCount = 0;

            for (let i = 0; i < array.length; i++) {
                checkedCount += array[i].checked ? 1 : 0;
            }

            if (modes.indexOf("4g") == -1) {
                if (checkedCount > 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = false;
                        array[i].disabled = true;
                    }
                }
            } else {
                if (checkedCount == 0) {
                    for (let i = 0; i < array.length; i++) {
                        array[i].checked = true;
                        array[i].disabled = false;
                    }
                }
            }
        }
    }
</script>